package me.zycracker.score;

import org.openqa.selenium.By;
import org.openqa.selenium.ElementNotInteractableException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;

import java.util.Arrays;
import java.util.List;

public class Main {
    public static void main(String[] args) {
        if (args.length != 5) return;

        // Process Times
        int times;
        try {
            times = Integer.parseInt(args[4]);
        } catch (NumberFormatException e){
            System.out.println("Wrong times");
            return;
        }


        // Process Answer
        String answer = args[3];
        int[] rawAnswer = new int[3];
        char[] charArray = answer.toCharArray();
        for (int i = 0, charArrayLength = charArray.length; i < charArrayLength; i++) {
            int c = charArray[i] - 65;
            if (c < 0 || c > 4) return;
            rawAnswer[i] = c;
        }

        // Print Info
        System.out.println("Member ID: " + args[0]);
        System.out.println("Question ID: " + args[1] + "-" + args[2]);
        System.out.println("Answer: " + args[3]);
        System.out.println("Raw Answer: " + Arrays.toString(rawAnswer));
        System.out.println("Times: " + times);

        // Init Driver
        ChromeOptions options = new ChromeOptions();
        options.addArguments("--remote-allow-origins=*");
        WebDriver driver = new ChromeDriver(options);

        // Main
        for (int i = 1; i <= times; i++){
            try {
                check(driver, args, rawAnswer);
            } catch (IndexOutOfBoundsException e) {
                i--;
                System.out.println("There is something wrong in times " + i + ", Retry!");
            } catch (Exception e){
                i--;
                System.out.println("There is something wrong in times " + i + ", Retry!");
                System.out.println("The error message is: " + e.getMessage());
            }
        }

        // Quit
        driver.close();
        driver.quit();

    }

    private static void check(WebDriver driver, String[] args, int[] rawAnswer) throws InterruptedException {

        // Refresh token
        driver.get("https://jz.zy.com/ctb/#/?memberId=" + args[0]);
        Thread.sleep(1000);

        // Similar Detail - 举一反三
        driver.get("https://jz.zy.com/ctb/#/similarDetail?questionId="+ args[1] +"&id=" + args[2]);

        // Choose Answer
        choose(driver,rawAnswer[0], 0);
        choose(driver,rawAnswer[1], 1);
        choose(driver,rawAnswer[2], 2);

        // Submit All
        WebElement submitAll = driver.findElement(By.className("detail")).findElement(By.className("ChooseTypeDilog")).findElements(By.xpath("*")).get(2);
        waitAndClickElement(submitAll);

    }

    private static void waitAndClickElement(WebElement element) throws InterruptedException {
        try {
            element.click();
        } catch (ElementNotInteractableException e) {
            Thread.sleep(25);
            waitAndClickElement(element);
        }
    }

    private static void choose(WebDriver driver, int id, int question) throws InterruptedException {
        // Get options
        List<WebElement> questionOptions = driver.findElements(By.id("question_options"));
        for (int i = 0; questionOptions.isEmpty() && i < 128; i++){
            Thread.sleep(25);
            questionOptions = driver.findElements(By.id("question_options"));
        }

        // Get Answer
        WebElement answer = questionOptions.get(question).findElements(By.xpath("*")).get(id);
        waitAndClickElement(answer);

        // Submit Answer
        WebElement footer = driver.findElement(By.className("detail")).findElements(By.xpath("*")).get(1);
        WebElement submit = footer.findElements(By.xpath("*")).get(2);
        waitAndClickElement(submit);
    }


}